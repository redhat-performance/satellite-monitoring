---
#
# Install/run collectd for satellite (Generic)
#

- name: "Detect RHEL release"
  setup:
    filter: ansible_distribution_major_version
  when: ansible_distribution_major_version is not defined

- name: Disable Foreman Protector lock
  command: foreman-maintain packages unlock

- name: Check for EPEL
  shell: rpm -qa | grep -q epel-release
  ignore_errors: true
  register: epel_installed

- name: Get EPEL repo if not already there
  get_url:
    url: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
    dest: /root/epel-release.rpm
  when: epel_installed.rc != 0

- name: Install EPEL rpm if not already done
  shell: rpm -ivh --force /root/epel-release.rpm
  when: epel_installed.rc != 0

- name: Check for enabled epel-release
  shell: yum repolist | grep -q epel
  ignore_errors: true
  register: epel_enabled

- name: Install collectd rpms
  yum:
    name: "{{ collectd_packages[config_type + '-el' + ansible_distribution_major_version] }}"
    state: present
  become: true
  register: install_collectd

#create /etc/httpd/conf.d if not exist
- file:
    path: /etc/httpd/conf.d
    state: directory
    mode: 0755

#
# Enable mod_status
#
- name: Determine if passenger is installed
  command:
    rpm -q passenger
  register: passenger_out
  ignore_errors: true

- name: Enable mod_status (server with Passenger)
  copy:
    src: status-passenger.conf
    dest: /etc/httpd/conf.d/status.conf
  notify: restart httpd
  when: passenger_out.rc == 0

- name: Enable mod_status (server with Puma)
  copy:
    src: status.conf
    dest: /etc/httpd/conf.d/status.conf
  notify: restart httpd
  when: passenger_out.rc != 0

#
# Satellite6 specific configuration steps
#
- name: Get Candlepin PostgresDB Password
  command: grep "jpa.config.hibernate.connection.password" /etc/candlepin/candlepin.conf
  register: satellite_candlepin_password
  when: "config_type == 'satellite6'"

- name: Get Foreman PostgresDB Password
  shell: grep "password" /etc/foreman/database.yml | awk '{print $2}' | tr -d '"'
  register: satellite_foreman_password
  when: "config_type == 'satellite6'"

- name: Get pulp PostgresDB Password on Sat
  shell: grep -i "password" /etc/pulp/settings.py | awk '{print $2}' | tr -d "',"
  register: satellite_pulp_password
  when: "config_type == 'satellite6'"

- name: Get pulp PostgresDB Password on capsule
  shell: grep -i "password" /etc/pulp/settings.py | awk '{print $2}' | tr -d "',"
  register: capsule_pulp_password
  when: "config_type == 'capsules'"

# - name: Allow group read to /etc/origin/master/admin.key
#   file: path=/etc/origin/master/admin.key mode=0640
#   when: "config_type == 'ose'"

- name: Configure collectd.conf
  template:
    src={{config_type}}.collectd.conf.j2
    dest=/etc/collectd.conf
    owner=root
    group=root
    mode=0644
  become: true

# Configure selinux bits
#
- name: Check for collectd permissive
  shell: semodule -l | grep -q permissive_collectd_t
  become: true
  register: collectd_permissive
  ignore_errors: true
  changed_when: false

# This command is not always found?
- name: Set permissive for collectd
  shell: semanage permissive -a collectd_t
  become: true
  when: collectd_permissive.rc != 0
  ignore_errors: true

#
# Additional policy bits may be needed for exec
#
- name: Collectd policy customization
  copy:
    src=custom-collectd.pp
    dest=/root/custom-collectd.pp
    owner=root
    group=root
    mode=644
  become: true

- name: Check for collectd custom
  shell: semodule -l | grep -q custom-collectd
  become: true
  register: collectd_custom
  ignore_errors: true
  changed_when: false

- name: Set custom policy for collectd
  shell: semodule -i /root/custom-collectd.pp
  become: true
  when: collectd_custom.rc != 0

# add collectd default group (not added with rpm -ivh)
#
- name: Add collectd group
  group: name=collectd state=present
  become: true

# Start collectd service
- name: Setup collectd service
  service: name=collectd state=restarted enabled=true
  become: true

# sometimes there's a stale epel package present, so rpm -e fails
# because somebody deleted the .repo files without uninstalling
# epel-release and rpm -e fails to remove multiple versions of the
# package. So we need to check this and remove all one by one
- name: Delete EPEL repo package
  yum:
    name: epel-release
    state: absent
- name: Disable EPEL
  yum_repository:
    name: epel
    state: absent
